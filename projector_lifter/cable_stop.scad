use <../common/roundedcube.scad>
use <../common/chamfered_screw_hole.scad>
use <../common/chamfers.scad>

CABLE_STOP_DIAMETER = 8;
CABLE_STOP_THICKNESS = 10;
CABLE_DIAMETER = 5;
CABLE_STOP_HOLE_DIAMETER = 7;

BASE_OFFSET = 2;

BASE_MOUNT_THICKNESS = 6;

SIDE_THICKNESS = 4;
TOP_THICKNESS = 8;

SCREW_PART_SIZE = 15;
BASE_MOUNT_WIDTH = CABLE_STOP_DIAMETER + 2 * SIDE_THICKNESS ;
BASE_MOUNT_HEIGHT = BASE_MOUNT_WIDTH + SCREW_PART_SIZE * 2;

SCREW_HEAD_SIZE = 2;
SCREW_HEAD_DIAMETER = 10;
SCREW_DIAMETER = 5;
SCREW_SIZE = 10;

ROUNDING =  1.75;

$fn = 40;


difference() {
    union () {
        /* Chamfer */
        translate([-BASE_MOUNT_WIDTH/2, -(SCREW_PART_SIZE - ROUNDING) - BASE_MOUNT_WIDTH / 2, BASE_MOUNT_THICKNESS / 2]) chamfer(BASE_MOUNT_WIDTH, SCREW_PART_SIZE - ROUNDING, CABLE_STOP_THICKNESS + TOP_THICKNESS - BASE_MOUNT_THICKNESS - ROUNDING, $fn = 100);
       
        translate([BASE_MOUNT_WIDTH/2, (SCREW_PART_SIZE - ROUNDING)  + BASE_MOUNT_WIDTH / 2, BASE_MOUNT_THICKNESS / 2]) rotate([0, 0, 180]) chamfer(BASE_MOUNT_WIDTH, SCREW_PART_SIZE - ROUNDING, CABLE_STOP_THICKNESS + TOP_THICKNESS - BASE_MOUNT_THICKNESS - ROUNDING, $fn = 100);
    
        /* Base */
        roundedcube([BASE_MOUNT_WIDTH, BASE_MOUNT_HEIGHT,BASE_MOUNT_THICKNESS], true, ROUNDING, "z");
  
         /* Middle block */
        translate([0, 0, (CABLE_STOP_DIAMETER + BASE_MOUNT_THICKNESS) / 2])
        roundedcube([BASE_MOUNT_WIDTH, BASE_MOUNT_WIDTH, CABLE_STOP_THICKNESS + TOP_THICKNESS], true, 1.75, "x");
    }
        translate([0, 0, BASE_MOUNT_THICKNESS/2 - 2+ BASE_OFFSET]) cylinder(d = CABLE_STOP_DIAMETER, h = BASE_MOUNT_WIDTH, center = true);
    translate([BASE_MOUNT_WIDTH / 3, 0, BASE_MOUNT_THICKNESS/2 + BASE_OFFSET ]) rotate([0, 90, 0]) cylinder(d = CABLE_STOP_HOLE_DIAMETER, h = BASE_MOUNT_WIDTH, center = true);
    
    
    
    cylinder(d = CABLE_DIAMETER, h = 100);
    /* Screws */
translate([0, BASE_MOUNT_HEIGHT/2 - SCREW_HEAD_DIAMETER / 2 - 2, -(SCREW_SIZE +SCREW_HEAD_SIZE) + BASE_MOUNT_THICKNESS/2]) chamfered_screw_hole(SCREW_DIAMETER, SCREW_SIZE, SCREW_HEAD_DIAMETER, SCREW_HEAD_SIZE, 10);
translate([0, - (BASE_MOUNT_HEIGHT/2 - SCREW_HEAD_DIAMETER / 2 - 2), -(SCREW_SIZE +SCREW_HEAD_SIZE) + BASE_MOUNT_THICKNESS/2]) chamfered_screw_hole(SCREW_DIAMETER, SCREW_SIZE, SCREW_HEAD_DIAMETER, SCREW_HEAD_SIZE, 10);
}

