include <../common/prism.scad>

POWER_SUPPLY_WIDTH = 78;
POWER_SUPPLY_HEIGHT = 41;

BRACKET_THICKNESS = 2;
BLOCKING_PART_HEIGHT = 4;
BLOCKING_PART_THICKNESS = 1;

BRACKET_LENGTH = 25;
SIDE_WIDTH = 15;

SIDE_HOLE_DIAM = 4;


module u_bracket() {
cube([POWER_SUPPLY_WIDTH + 2 * BRACKET_THICKNESS, BRACKET_THICKNESS, BRACKET_LENGTH]);
cube([POWER_SUPPLY_WIDTH + 2 * BRACKET_THICKNESS, BRACKET_THICKNESS + BLOCKING_PART_HEIGHT, BLOCKING_PART_THICKNESS]);

/* Side parts */
cube([BRACKET_THICKNESS, POWER_SUPPLY_HEIGHT + BRACKET_THICKNESS, BRACKET_LENGTH]);
translate([POWER_SUPPLY_WIDTH + BRACKET_THICKNESS, 0, 0]) cube([BRACKET_THICKNESS, POWER_SUPPLY_HEIGHT + BRACKET_THICKNESS, BRACKET_LENGTH]);
}

module bracket_side()
{
    difference() {
        cube([BRACKET_LENGTH, SIDE_WIDTH, BRACKET_THICKNESS]);
        translate([BRACKET_LENGTH/2, SIDE_WIDTH/2, 0]) cylinder(d = SIDE_HOLE_DIAM, h = BRACKET_THICKNESS, $fn = 50);
    }
    translate([0, 0, BRACKET_THICKNESS]) prism(BRACKET_THICKNESS, SIDE_WIDTH, SIDE_WIDTH);

    translate([BRACKET_LENGTH - BRACKET_THICKNESS, 0, BRACKET_THICKNESS]) prism(BRACKET_THICKNESS, SIDE_WIDTH, SIDE_WIDTH);
}

u_bracket();
translate([-SIDE_WIDTH, POWER_SUPPLY_HEIGHT + BRACKET_THICKNESS, BRACKET_LENGTH]) rotate([0, 90, -90]) bracket_side();
translate([SIDE_WIDTH + POWER_SUPPLY_WIDTH + 2 * BRACKET_THICKNESS, POWER_SUPPLY_HEIGHT + BRACKET_THICKNESS, BRACKET_LENGTH]) mirror([1, 0, 0]) rotate([0, 90, -90]) bracket_side();